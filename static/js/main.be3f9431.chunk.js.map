{"version":3,"sources":["types/Status.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","title","completed","cn","type","onClick","TodoFilter","query","setQuery","setFilter","onChange","event","target","value","all","active","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","setSelectedTodoId","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","selectedTodoId","filter","filteredTodos","visibleTodos","useMemo","trim","toLowerCase","includes","length","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be3f9431.chunk.js","sourcesContent":["export enum Status {\n  all = 'all',\n  completed = 'completed',\n  active = 'active',\n}\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: number;\n  setSelectedTodo: (value: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const {\n            id,\n            title,\n            completed,\n          } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={cn({\n                'has-background-info-light': selectedTodo === id,\n              })}\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={\n                    cn({\n                      'has-text-success': completed,\n                      'has-text-danger': !completed,\n                    })\n                  }\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedTodo(id)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={\n                        cn(\n                          'far',\n                          {\n                            'fa-eye': !(selectedTodo === id),\n                            'fa-eye-slash': selectedTodo === id,\n                          },\n                        )\n                      }\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  query: string\n  setQuery: (value: string) => void;\n  setFilter: (value: Status) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  setFilter,\n}) => {\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleChangeFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilter(event.target.value as Status);\n  };\n\n  const handleResetQuery = () => {\n    setQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={handleChangeFilter}>\n            <option value={Status.all}>All</option>\n            <option value={Status.active}>Active</option>\n            <option value={Status.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleResetQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo;\n  setSelectedTodoId: (value: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  setSelectedTodoId,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, []);\n\n  return (\n    <div\n      className=\"modal is-active\"\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodoId(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed && (\n                <strong className=\"has-text-success\">Done</strong>\n              )}\n              {!todo.completed && (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Status } from './types/Status';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState<number>(0);\n  const [filter, setFilter] = useState(Status.all);\n  const [query, setQuery] = useState('');\n  const getTodoByID = (id: number): Todo => {\n    return todos.find(todo => todo.id === id)!;\n  };\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  const filteredTodos = todos.filter(todo => {\n    switch (filter) {\n      case Status.active:\n        return !todo.completed;\n\n      case Status.completed:\n        return todo.completed;\n\n      default:\n        return Status.all;\n    }\n  });\n\n  const visibleTodos = useMemo(() => {\n    if (query.trim()) {\n      return filteredTodos.filter(todo => todo.title.toLowerCase()\n        .includes(query.toLowerCase()));\n    }\n\n    return filteredTodos;\n  }, [todos, filter, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                setFilter={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length < 1 && (\n                <Loader />\n              )}\n              {todos.length > 0 && (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodo={selectedTodoId}\n                  setSelectedTodo={setSelectedTodoId}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodoId !== 0 && (\n        <TodoModal\n          todo={getTodoByID(selectedTodoId)}\n          setSelectedTodoId={setSelectedTodoId}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}